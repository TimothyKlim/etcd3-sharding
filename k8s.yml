kind: ConfigMap
apiVersion: v1
metadata:
  name: sharding-config
  namespace: development
data:
  application.conf: |+
    ring {
      etcd-server = "http://etcd-sharding.development.svc.yzer.local:2379"
      kafka.servers = "etcd-sharding.development.svc.yzer.local:29092"
      jdbc.url = "jdbc:postgresql://etcd-sharding.development.svc.yzer.local:5432/ring"

      metrics {
        prometheus-gateway {
          host = "pushgw.monitoring.svc.yzer.local"
          port = 9091
          instance = "local"
          instance = "etcd-stage-${ring.node-id}"
          uri = /metrics/job/server/instance/${ring.metrics.prometheus-gateway.instance}
          buffer-size = 32
          backoff {
            min = 1 sec
            max = 2 sec
            random-factor = 0.25
          }
        }
        interval = 30 sec
      }
    }

---

apiVersion: v1
kind: Pod
metadata:
  name: etcd-sharding
  namespace: development
  labels:
    app: etcd-sharding
spec:
  containers:
  - name: db
    image: postgres:10-alpine
    env:
    - name: POSTGRES_DB
      value: "ring"
    ports:
    - containerPort: 5432

  - name: etcd
    image: quay.io/coreos/etcd:v3.2
    command: ["/usr/local/bin/etcd",
      "--name", "node1",
      "--initial-advertise-peer-urls", "http://etcd-sharding.development.svc.yzer.local:2380",
      "--listen-peer-urls", "http://0.0.0.0:2380",
      "--advertise-client-urls", "http://etcd-sharding.development.svc.yzer.local:2379",
      "--listen-client-urls", "http://0.0.0.0:2379",
      "--initial-cluster", "node1=http://etcd-sharding.development.svc.yzer.local:2380",
      "--initial-cluster-state", "new",
      "--initial-cluster-token", "etcd-cluster"
    ]
    env:
    - name: ETCDCTL_API
      value: "3"
    ports:
    - containerPort: 2379

  - name: zookeepeer
    image: confluentinc/cp-zookeeper:4.1.0
    env:
    - name: ZOOKEEPER_CLIENT_PORT
      value: "32181"
    ports:
    - containerPort: 32181

  - name: kafka
    image: confluentinc/cp-kafka:4.1.0
    env:
    - name: KAFKA_ZOOKEEPER_CONNECT
      value: "localhost:32181"
    - name: KAFKA_ADVERTISED_LISTENERS
      value: "PLAINTEXT://etcd-sharding.development.svc.yzer.local:29092"
    - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
      value: "1"
    - name: KAFKA_OFFSETS_STORAGE
      value: "kafka"
    ports:
    - containerPort: 29092

---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: etcd-sharding-worker
  name: etcd-sharding-worker
  namespace: development
spec:
  replicas: 0
  serviceName: etcd-sharding-worker
  selector:
    matchLabels:
      app: etcd-sharding-worker
  template:
    metadata:
      labels:
        app: etcd-sharding-worker
      name: etcd-sharding-worker
    spec:
      containers:
      - name: app-worker
        image: ktimothy/etcd3-sharding:0.1.16-SNAPSHOT
        command: ["/app/bin/app", "worker"]
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /app/config
          name: config
          readOnly: true
      volumes:
      - configMap:
          name: sharding-config
        name: config

---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: etcd-sharding-node
  name: etcd-sharding-node
  namespace: development
spec:
  replicas: 0
  serviceName: etcd-sharding-node
  selector:
    matchLabels:
      app: etcd-sharding-node
  template:
    metadata:
      labels:
        app: etcd-sharding-node
      name: etcd-sharding-node
    spec:
      containers:
      - name: app-worker
        image: ktimothy/etcd3-sharding:0.1.16-SNAPSHOT
        command:
        - sh
        - -c
        - export NODE_ID="$(expr $(hostname | grep -o "[[:digit:]]*$") + 1)" && /app/bin/app -- node
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /app/config
          name: config
          readOnly: true
      volumes:
      - configMap:
          name: sharding-config
        name: config

---

kind: Service
apiVersion: v1
metadata:
  name: etcd-sharding
  namespace: development
spec:
  ports:
  - name: etcd
    port: 2379
  - name: kafka
    port: 29092
  - name: pg
    port: 5432
  selector:
    app: etcd-sharding
